name: Runnable (stable)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze:
    name: Analyze on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Log Dart/Flutter versions
        run: |
          dart --version
          flutter --version
      - name: Install melos
        run: dart pub global activate melos
      - name: Melos bootstrap
        run: melos bootstrap
      - name: Check Dart code formatting
        run: melos exec -- "dart format . -o none --set-exit-if-changed"
      - name: Analyze
        run: melos run analyze
  test_iOS:
    needs: analyze
    name: Test iOS on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        build_cmd:
          - melos run try_build_ios
          - melos run try_build_ios_swift_package_manager
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          architecture: x64
          channel: "stable"
      - run: dart --version
      - run: flutter --version
      - name: Install melos
        run: dart pub global activate melos
      - name: Melos bootstrap
        run: melos bootstrap
      - name: Build iOS debug with melos
        run: ${{ matrix.build_cmd }}

  test_android:
    needs: analyze
    name: Test Android on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart --version
      - run: flutter --version
      - run: flutter pub get
      - name: Install melos
        run: dart pub global activate melos
      - name: Melos bootstrap
        run: melos bootstrap
      - run: melos run try_build_apk

  test_web:
    needs: analyze
    name: Test build web on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart --version
      - run: flutter --version
      - name: Install melos
        run: dart pub global activate melos
      - name: Melos bootstrap
        run: melos bootstrap
      - run: melos run try_build_web
